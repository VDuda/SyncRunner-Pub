package com.v3.dto;

// Generated Mar 1, 2014 3:23:41 PM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Shoe generated by hbm2java
 */
@Entity
@Table(name = "shoe", catalog = "v3_inventory", uniqueConstraints = {
		@UniqueConstraint(columnNames = "id_brand"),
		@UniqueConstraint(columnNames = "upc"),
		@UniqueConstraint(columnNames = "id_style") })
public class Shoe implements java.io.Serializable {

	private ShoeId id;
	private Sku sku;
	private SizeMap sizeMap;
	private ColorMap colorMap;
	private Images images;
	private Gender gender;
	private String title;
	private boolean onAmazon;
	private String asin;
	private Set<Product> products = new HashSet<Product>(0);

	public Shoe() {
	}

	public Shoe(ShoeId id, Sku sku) {
		this.id = id;
		this.sku = sku;
	}
	
	public Shoe(ShoeId id, Sku sku, boolean onAmazon) {
		this.id = id;
		this.sku = sku;
		this.onAmazon = onAmazon;
	}

	public Shoe(ShoeId id, Sku sku, SizeMap sizeMap, ColorMap colorMap,
			Images images, Gender gender, String title, Set<Product> products) {
		this.id = id;
		this.sku = sku;
		this.sizeMap = sizeMap;
		this.colorMap = colorMap;
		this.images = images;
		this.gender = gender;
		this.title = title;
		this.products = products;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "upc", column = @Column(name = "upc", unique = false, nullable = false, length = 12)),
			@AttributeOverride(name = "idStyle", column = @Column(name = "id_style", unique = false, nullable = false)),
			@AttributeOverride(name = "idBrand", column = @Column(name = "id_brand", unique = false, nullable = false)) })
	public ShoeId getId() {
		return this.id;
	}

	public void setId(ShoeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({
			@JoinColumn(name = "id_style", referencedColumnName = "id_style", unique = false, nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "id_brand", referencedColumnName = "id_brand", unique = false, nullable = false, insertable = false, updatable = false) })
	public Sku getSku() {
		return this.sku;
	}

	public void setSku(Sku sku) {
		this.sku = sku;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_size_map")
	public SizeMap getSizeMap() {
		return this.sizeMap;
	}

	public void setSizeMap(SizeMap sizeMap) {
		this.sizeMap = sizeMap;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_color_map")
	public ColorMap getColorMap() {
		return this.colorMap;
	}

	public void setColorMap(ColorMap colorMap) {
		this.colorMap = colorMap;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_img")
	public Images getImages() {
		return this.images;
	}

	public void setImages(Images images) {
		this.images = images;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_gender")
	public Gender getGender() {
		return this.gender;
	}

	public void setGender(Gender gender) {
		this.gender = gender;
	}

	@Column(name = "title", length = 80)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "shoe")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	public boolean isOnAmazon() {
		return onAmazon;
	}

	@Column(name = "onAmazon", nullable = false)
	public void setOnAmazon(boolean onAmazon) {
		this.onAmazon = onAmazon;
	}

	/**
	 * @return the asin - {@link String}
	 */
	public String getAsin() {
		return asin;
	}

	/**
	 * @param asin the {@link String} to set
	 */
	@Column(name = "asin", nullable = false)
	public void setAsin(String asin) {
		this.asin = asin;
	}

}
