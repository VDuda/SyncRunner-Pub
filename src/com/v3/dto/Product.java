package com.v3.dto;

import java.util.Comparator;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "v3_inventory")
public class Product implements java.io.Serializable  {

	private Integer idProduct;
	private Lot lot;
	private Shoe shoe;
	private String binRack;
	private Date timeIn;
	private boolean inStock;
	private boolean inBin;
	private Set<ProductLog> productLogs = new HashSet<ProductLog>(0);

	public Product() {
	}
	
	public Product(String binRack) {
		this.binRack = binRack;
	}

	public Product(Lot lot, Shoe shoe, Date timeIn, boolean inStock) {
		this.lot = lot;
		this.shoe = shoe;
		this.timeIn = timeIn;
		this.inStock = inStock;
	}

	public Product(Lot lot, Shoe shoe, String binRack, Date timeIn,
			boolean inStock) {
		this.lot = lot;
		this.shoe = shoe;
		this.binRack = binRack;
		this.timeIn = timeIn;
		this.inStock = inStock;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_product", unique = true, nullable = false)
	public Integer getIdProduct() {
		return this.idProduct;
	}

	public void setIdProduct(Integer idProduct) {
		this.idProduct = idProduct;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_lot", nullable = false)
	public Lot getLot() {
		return this.lot;
	}

	public void setLot(Lot lot) {
		this.lot = lot;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({
			@JoinColumn(name = "upc", referencedColumnName = "upc", nullable = true),
			@JoinColumn(name = "id_style", referencedColumnName = "id_style", nullable = true),
			@JoinColumn(name = "id_brand", referencedColumnName = "id_brand", nullable = true) })
	public Shoe getShoe() {
		return this.shoe;
	}

	public void setShoe(Shoe shoe) {
		this.shoe = shoe;
	}

	@Column(name = "bin_rack", length = 45)
	public String getBinRack() {
		return this.binRack;
	}

	public void setBinRack(String binRack) {
		this.binRack = binRack;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "time_in", nullable = false, length = 19)
	public Date getTimeIn() {
		return this.timeIn;
	}

	public void setTimeIn(Date timeIn) {
		this.timeIn = timeIn;
	}

	@Column(name = "in_stock", nullable = false)
	public boolean isInStock() {
		return this.inStock;
	}

	public void setInStock(boolean inStock) {
		this.inStock = inStock;
	}
	
	@Column(name = "in_bin", nullable = false)
	public boolean isInBin() {
		return this.inBin;
	}

	public void setInBin(boolean inBin) {
		this.inBin = inBin;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductLog> getProductLogs() {
		return this.productLogs;
	}

	public void setProductLogs(Set<ProductLog> productLogs) {
		this.productLogs = productLogs;
	}
	
	@Override 
	public boolean equals(Object p){
		if(!(p instanceof Product))//if not a product then they don't equal!
			return false;
		else if(idProduct.equals(((Product)p).getIdProduct()))//if idProducts equal
			return true;
		else if(this == p)//if Object points to this
			return true;
		else
			return false;
	}

}
