package com.v3.dto;

// Generated Mar 1, 2014 3:23:41 PM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Sku generated by hbm2java
 */
@Entity
@Table(name = "sku", catalog = "v3_inventory")
public class Sku implements java.io.Serializable {

	private SkuId id;
	private Material material;
	private Category category;
	private Style style;
	private Brand brand;
	private String features;
	private String description;
	private Set<Shoe> shoes = new HashSet<Shoe>(0);
	private Set<LinkedSku> linkedSkus = new HashSet<LinkedSku>(0);

	public Sku() {
	}

	public Sku(SkuId id, Style style, Brand brand) {
		this.id = id;
		this.style = style;
		this.brand = brand;
	}

	public Sku(SkuId id, Material material, Category category, Style style,
			Brand brand, String features, String description, Set<Shoe> shoes,
			Set<LinkedSku> linkedSkus) {
		this.id = id;
		this.material = material;
		this.category = category;
		this.style = style;
		this.brand = brand;
		this.features = features;
		this.description = description;
		this.shoes = shoes;
		this.linkedSkus = linkedSkus;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idStyle", column = @Column(name = "id_style", nullable = false)),
			@AttributeOverride(name = "idBrand", column = @Column(name = "id_brand", nullable = false)) })
	public SkuId getId() {
		return this.id;
	}

	public void setId(SkuId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "material")
	public Material getMaterial() {
		return this.material;
	}

	public void setMaterial(Material material) {
		this.material = material;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_style", nullable = false, insertable = false, updatable = false)
	public Style getStyle() {
		return this.style;
	}

	public void setStyle(Style style) {
		this.style = style;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_brand", nullable = false, insertable = false, updatable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@Column(name = "features")
	public String getFeatures() {
		return this.features;
	}

	public void setFeatures(String features) {
		this.features = features;
	}

	@Column(name = "description", length = 16777215)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sku")
	public Set<Shoe> getShoes() {
		return this.shoes;
	}

	public void setShoes(Set<Shoe> shoes) {
		this.shoes = shoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sku")
	public Set<LinkedSku> getLinkedSkus() {
		return this.linkedSkus;
	}

	public void setLinkedSkus(Set<LinkedSku> linkedSkus) {
		this.linkedSkus = linkedSkus;
	}

}
