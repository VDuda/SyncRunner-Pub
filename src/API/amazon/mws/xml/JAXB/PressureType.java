//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.03 at 03:15:27 PM EDT 
//


package API.amazon.mws.xml.JAXB;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PressureType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PressureType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="pounds_per_square_inch"/>
 *     &lt;enumeration value="bars"/>
 *     &lt;enumeration value="millibars"/>
 *     &lt;enumeration value="kilopascal"/>
 *     &lt;enumeration value="hectopascal"/>
 *     &lt;enumeration value="pascal"/>
 *     &lt;enumeration value="atmosphere"/>
 *     &lt;enumeration value="millimeters_mercury"/>
 *     &lt;enumeration value="pound_per_square_foot"/>
 *     &lt;enumeration value="inches_mercury"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PressureType")
@XmlEnum
public enum PressureType {

    @XmlEnumValue("pounds_per_square_inch")
    POUNDS_PER_SQUARE_INCH("pounds_per_square_inch"),
    @XmlEnumValue("bars")
    BARS("bars"),
    @XmlEnumValue("millibars")
    MILLIBARS("millibars"),
    @XmlEnumValue("kilopascal")
    KILOPASCAL("kilopascal"),
    @XmlEnumValue("hectopascal")
    HECTOPASCAL("hectopascal"),
    @XmlEnumValue("pascal")
    PASCAL("pascal"),
    @XmlEnumValue("atmosphere")
    ATMOSPHERE("atmosphere"),
    @XmlEnumValue("millimeters_mercury")
    MILLIMETERS_MERCURY("millimeters_mercury"),
    @XmlEnumValue("pound_per_square_foot")
    POUND_PER_SQUARE_FOOT("pound_per_square_foot"),
    @XmlEnumValue("inches_mercury")
    INCHES_MERCURY("inches_mercury");
    private final String value;

    PressureType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PressureType fromValue(String v) {
        for (PressureType c: PressureType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
